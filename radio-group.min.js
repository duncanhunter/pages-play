import{html as e,css as t,createAttributes as r,addAttributeProperties as i,getRefs as a,createEventHandlerName as o}from"./core.min.js";const s=e`<fieldset role="radiogroup" aria-labelledby="label" aria-describedby="label error"><label id="label" part="label"><slot name="label"></slot></label><div id="help" part="help"><slot name="help"></slot></div><div part="radios-container"><slot></slot></div><div id="error" part="error"><slot name="error"></slot></div></fieldset>`,n=t`:host{display:block}:host([orientation=vertical]) [part=radios-container]{flex-direction:column}[part=radios-container]{display:flex;gap:var(--ui-space-3)}fieldset{border:none;margin:0;padding:0;outline:0}`,d=r({boolean:["disabled"],property:["value","name","error","label","help","orientation"]});class l extends HTMLElement{static formAssociated=!0;static get observedAttributes(){return Array.from(d.keys())}internals;get radios(){return Array.from(this.querySelectorAll("ui-radio"))}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(s.cloneNode(!0)),this.shadowRoot.adoptedStyleSheets=[n],i(d,this),this.refs=a(this.shadowRoot),this.internals=this.attachInternals()}connectedCallback(){this.addEventListener("ui-change",this),this.addEventListener("keydown",this),this.initRadios()}disconnectedCallback(){this.removeEventListener("ui-change",this),this.removeEventListener("keydown",this)}attributeChangedCallback(e,t,r){const{callbackName:i}=d.get(e);i&&this[i]?.(t,r)}handleEvent(e){this[o(e.type)](e)}labelChanged(e,t){this.shadowRoot.querySelector('[name="label"]').textContent=t}helpChanged(e,t){this.shadowRoot.querySelector('[name="help"]').textContent=t}errorChanged(e,t){this.shadowRoot.querySelector('[name="error"]').textContent=t}onUiChange({target:e}){this.updateRadio(e),this.updateValidity()}onKeydown({target:e,key:t}){const r=this.radios,i=r.length,a=r.findIndex((t=>t===e)),o={ArrowDown:1,ArrowRight:1,ArrowUp:-1,ArrowLeft:-1}[t];if(!o||-1===a)return;const s=(a+o+i)%i;this.updateRadio(r[s])}initRadios(){const e=this.radios.find((e=>e.checked));this.radios.forEach(((t,r)=>{t.setAttribute("tabindex",e===t||!e&&0===r?"0":"-1")}))}updateRadio(e){for(const t of this.radios)t!==e?(t.removeAttribute("checked"),t.setAttribute("tabindex","-1")):(this.value=e.value,this.internals.setFormValue(e.value),t.setAttribute("checked",""),t.setAttribute("tabindex","0"),t.focus())}updateValidity(){const e=this.radios.some((e=>e.hasAttribute("checked"))),t=this.shadowRoot.querySelector('[name="error"]'),r=this.radios[0];return e?(r.removeAttribute("aria-invalid"),r.removeAttribute("aria-required"),t.textContent="",this.internals.setValidity({})):(this.internals.setValidity({customError:!0}," ",r),this.error="Please select an option.",t.textContent=this.error,this.refs.ids.error.setAttribute("role","alert"),this.refs.ids.error.setAttribute("aria-live","polite"),r.setAttribute("aria-invalid","true"),r.setAttribute("aria-required","true"),r.focus()),e}focus(){const e=this.querySelector('ui-radio[tabindex="0"]');e&&e.focus()}}const h=e`<span part="circle"></span><slot part="label"></slot>`,c=t`:host{display:inline-flex;align-items:center;gap:var(--ui-space-3);outline:0;cursor:pointer}:host(:focus) [part=circle]{outline:var(--ui-focus-ring);outline-offset:var(--ui-focus-ring-offset)}:host([checked]) [part=circle]{width:var(--ui-space-6);height:var(--ui-space-6);background-color:transparent;border-radius:50%;box-shadow:inset 0 0 0 5px var(--ui-color-primary-500)}:host(:not([checked])) [part=circle]{width:var(--ui-space-6);height:var(--ui-space-6);background-color:transparent;box-shadow:inset 0 0 0 1px var(--ui-border-color-2);border-radius:50%}`,u=r({boolean:["checked"],property:["value"]});class p extends HTMLElement{static get observedAttributes(){return Array.from(u.keys())}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(h.cloneNode(!0)),this.shadowRoot.adoptedStyleSheets=[c],i(u,this),this.attachInternals().role="radio"}connectedCallback(){this.addEventListener("click",this),this.addEventListener("keydown",this)}attributeChangedCallback(e,t,r){const{callbackName:i}=u.get(e);i&&this[i]?.(t,r)}disconnectedCallback(){this.removeEventListener("click",this),this.removeEventListener("keydown",this)}handleEvent(e){this[o(e.type)](e)}onClick(e){e.preventDefault(),this.dispatchEvent(new CustomEvent("ui-change",{bubbles:!0}))}onKeydown(e){" "===e.key&&(e.preventDefault(),this.dispatchEvent(new CustomEvent("ui-change",{bubbles:!0})))}}customElements.define("ui-radio",p),customElements.define("ui-radio-group",l);
